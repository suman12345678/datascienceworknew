linear algeber generalize n-D problem
any coordinate can be represented as a vector
row vec 1*n col vec n*1
vec multiplicatio (dot and cross)
a=[a1 a2 a3.. an]
b=[b1 b2 b3.. bn]
a.b(dot product)=a1*b1+a2*b2+....an*bn=aT(transpose)b=||a||||b||costheta  [this is true for n dim vector]
projecttion of vec a on b is = a.b/||b||  = a.b/||a||
default vector is column vector
if a and b are perpendicular aT(transpose)b=0  so if a has some value all points on vector b are perpendicular to a so aTb is equation of a plane passing thr origin
distance of a point p(p1 p2 p3 p4...) from a plane wTx=0 is wTp/||w||
elicpises xsq/asq+ysq/bsq=1   circle xsq+ysq=rsq

random variable(continuous and discreate)

set is not indexable
15//2=7(closer integer)
bitwise operator==> convert to binary then calculate bitwise
a=5 b=5 print(a is b)==> True
0 None False are false
break(come out of loop) continue(start with new iteration in the loop)



nirmalization make 0-1
standarization makes mu=0,sd=1
cov(x,y)=cov(y,x)=1/nsum(for i = 1 n)(xi-mux)(yi-mux) where aij=aji in matrix form
if columns are standarize(lets say feathers f1 f2 f3..fn)
then cov(f1,f2)=1/n*f1Tf2(as mu are 0)
covariance of X matrix is XtX/n (if column stabdarize)
so for standarize columns of a matrix X the covariance of X is XtX/n[n= no of obs]

when there are a lot of dimension use pca and take it in 2-dimension to visualize

put model in production: Refer: http://scikit-learn.org/stable/modules/model_persistence.html


clustering: https://cs.wmich.edu/alfuqaha/summer14/cs6530/lectures/ClusteringAnalysis.pdf

jupyter login: login@123
