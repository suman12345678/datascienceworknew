res_inc=as.data.frame(Assignment_Group=c('f161','f162','f163','f164'),TITLE=c('job ewcsew46 abend','job qwcqcr00 failed with 12','zwclegb3 error night','websac wdck00 not working'))
Assignment_Group=c('f161','f162','f163','f164')
res_inc=as.data.frame(cbind(Assignment_Group=c('f161','f162','f163','f164'),TITLE=c('job ewcsew46 abend','job qwcqcr00 failed with 12','zwclegb3 error night','websac wdck00 not working'))
)
res_inc
res_inc$Assignment_Group<-as.character(res_inc$Assignment_Group)
res_inc$TITLE<-as.character(res_inc$TITLE)
input<-c(Assignment_Group="default",TITLE="JOB EWCRRW14 (EWPSAKRW14.0010.01041800.JCL) ENDED IN ERROR JCL tiludv")
res_inc<-rbind(res_inc,input)
res_inc=as.data.frame(cbind(Assignment_Group=c('f161','f162','f163','f164'),TITLE=c('job ewcsew46 abend','job qwcqcr00 failed with 12','zwclegb3 error night','websac wdck00 not working')))
#add the test data also in the same matrix otherwise SVM wont work to predict only one seperately
res_inc$Assignment_Group<-as.character(res_inc$Assignment_Group)
res_inc$TITLE<-as.character(res_inc$TITLE)
input<-c(Assignment_Group="default",TITLE="JOB EWCRRW14 (EWPSAKRW14.0010.01041800.JCL) ENDED IN ERROR JCL tiludv")
res_inc$Assignment_Group<-as.factor(res_inc$Assignment_Group)
res_inc$TITLE<-as.factor(res_inc$TITLE)
res_inc<-as.data.frame(lapply(res_inc ,function(x) gsub(".", " ", x,fixed = TRUE)))
corp<-Corpus(VectorSource(res_inc$TITLE))
inspect(corp[1:3])
corpus_clean <- tm_map(corp, tolower)
corpus_clean <- tm_map(corpus_clean, removeNumbers)
corpus_clean <- tm_map(corpus_clean, removeWords, stopwords())
corpus_clean <- tm_map(corpus_clean, removePunctuation)
corpus_clean <- tm_map(corpus_clean, stripWhitespace)
mystopword<-c("a","an","the","job","error","automatic","batch","tiludv","auto","ended","jcl","jcli")
corpus_clean <- tm_map(corpus_clean, removeWords,mystopword)
sms_dtm <- DocumentTermMatrix(corpus_clean)
library(e1071)
corp<-Corpus(VectorSource(res_inc$TITLE))
library(tm)
corp<-Corpus(VectorSource(res_inc$TITLE))
corpus_clean <- tm_map(corp, tolower)
corpus_clean <- tm_map(corpus_clean, removeNumbers)
corpus_clean <- tm_map(corpus_clean, removeWords, stopwords())
corpus_clean <- tm_map(corpus_clean, removePunctuation)
corpus_clean <- tm_map(corpus_clean, stripWhitespace)
mystopword<-c("a","an","the","job","error","automatic","batch","tiludv","auto","ended","jcl","jcli")
corpus_clean <- tm_map(corpus_clean, removeWords,mystopword)
sms_dtm <- DocumentTermMatrix(corpus_clean)
Terms(sms_dtm)
sms_dtm
inspect(sms_dtm)
sms_dtm[order(Terms(sms_dtm)]
sms_dtm[order(Terms(sms_dtm))]
order(Terms(sms_dtm))
sms_dtm$dimnames$Terms
input<-"JOB EWCRRW14 (EWPSAKRW14.0010.01041800.JCL) ENDED IN ERROR JCL tiludv"
input<-gsub(".", " ", input,fixed = TRUE)
corp1<-Corpus(VectorSource(input))
corpus_clean1 <- tm_map(corp1, tolower)
corpus_clean1 <- tm_map(corpus_clean1, removeNumbers)
corpus_clean1 <- tm_map(corpus_clean1, removeWords, stopwords())
corpus_clean1 <- tm_map(corpus_clean1, removePunctuation)
corpus_clean1 <- tm_map(corpus_clean1, stripWhitespace)
corpus_clean1 <- tm_map(corpus_clean1, removeWords,mystopword)
sms_corpus_test1 <- corpus_clean1
sms_test1 <- DocumentTermMatrix(sms_corpus_test1,control = list(dictionary=Terms(sms_dtm))
)
sms_test1
sms_dtm$dimnames$Terms
sms_test1$dimnames$Terms
inspect(sms_test1)
sms_test1 <- DocumentTermMatrix(sms_corpus_test1,control = list(dictionary=Terms(sms_dtm$dimnames$Terms)))
sms_corpus_test1 <- corpus_clean1
sms_test1 <- DocumentTermMatrix(sms_corpus_test1,control = list(dictionary=Terms(sms_dtm$dimnames$Terms)))
sms_all <- DocumentTermMatrix(corpus_clean)
sms_all.m <- as.matrix(sms_all)
sms_all.df <- as.data.frame(sms_all.m)
sms_all.df <- apply(sms_all.df, MARGIN = 2, convert_counts)
all<-as.factor(res_inc$Assignment_Group)
data <- as.data.frame(cbind(all,as.matrix(sms_all.df)))
smp_size <- floor(0.75 * nrow(res_inc))
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train<-data[train_ind,]
data_test<-data[-train_ind,]
sv <- svm(all~., data_train, type="C-classification", kernel="linear", cost=1)
data <- as.data.frame(cbind(all,as.matrix(sms_all.df)))
smp_size <- floor(0.99 * nrow(res_inc))
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train<-data[train_ind,]
data_test<-data[-train_ind,]
sv <- svm(all~., data_train, type="C-classification", kernel="linear", cost=1)
all
data_train
res_inc
data_train<-data
data_train
sv <- svm(all~., data_train, type="C-classification", kernel="linear", cost=1)
sms_test1
inspect(sms_test1)
predict(sv,sms_test1)
